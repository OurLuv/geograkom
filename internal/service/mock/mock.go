// Code generated by MockGen. DO NOT EDIT.
// Source: ../handler/route.go

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	reflect "reflect"

	model "github.com/OurLuv/geograkom/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockRouteService is a mock of RouteService interface.
type MockRouteService struct {
	ctrl     *gomock.Controller
	recorder *MockRouteServiceMockRecorder
}

// MockRouteServiceMockRecorder is the mock recorder for MockRouteService.
type MockRouteServiceMockRecorder struct {
	mock *MockRouteService
}

// NewMockRouteService creates a new mock instance.
func NewMockRouteService(ctrl *gomock.Controller) *MockRouteService {
	mock := &MockRouteService{ctrl: ctrl}
	mock.recorder = &MockRouteServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRouteService) EXPECT() *MockRouteServiceMockRecorder {
	return m.recorder
}

// DeleteRoutes mocks base method.
func (m *MockRouteService) DeleteRoutes(id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteRoutes", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteRoutes indicates an expected call of DeleteRoutes.
func (mr *MockRouteServiceMockRecorder) DeleteRoutes(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteRoutes", reflect.TypeOf((*MockRouteService)(nil).DeleteRoutes), id)
}

// GetRouteByID mocks base method.
func (m *MockRouteService) GetRouteByID(arg0 int) (*model.Route, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRouteByID", arg0)
	ret0, _ := ret[0].(*model.Route)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRouteByID indicates an expected call of GetRouteByID.
func (mr *MockRouteServiceMockRecorder) GetRouteByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRouteByID", reflect.TypeOf((*MockRouteService)(nil).GetRouteByID), arg0)
}

// RegisterRoute mocks base method.
func (m *MockRouteService) RegisterRoute(arg0 model.Route) (*model.Route, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterRoute", arg0)
	ret0, _ := ret[0].(*model.Route)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RegisterRoute indicates an expected call of RegisterRoute.
func (mr *MockRouteServiceMockRecorder) RegisterRoute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterRoute", reflect.TypeOf((*MockRouteService)(nil).RegisterRoute), arg0)
}
